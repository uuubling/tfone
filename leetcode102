/** 
 * Definition for a binary tree node. 
 * struct TreeNode { 
 *     int val; 
 *     TreeNode *left; 
 *     TreeNode *right; 
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {} 
 * }; 
 */  
class Solution {  
public: 
vector<vector<int>> levelOrder(TreeNode* root)   
    {  
          
        
    vector<vector<int>> result;  
    queue<TreeNode*> q;  
  
    if (root == NULL)  
    {  
        return result;  
    }  
    q.push(root);  
    vector<int> le_temp;  
  
    while(!q.empty())  
    {  
  
        le_temp.clear();  
        queue<TreeNode*> level;  
              
        int size = q.size();      
        for(int i = 0; i < size; ++i)  
        {  
            TreeNode* temp = q.front();  
            q.pop();  
            if(temp->left)  
            {  
                level.push(temp->left);  
            }  
            if(temp->right)  
            {  
                level.push(temp->right);  
                  
            }  
            le_temp.push_back(temp->val);  
        }  
  
        while(!level.empty())  
        {  
  
            q.push(level.front());     
            level.pop();  
        }  
        result.push_back(le_temp);  
    }  
  
    return result;
    }  
};  
